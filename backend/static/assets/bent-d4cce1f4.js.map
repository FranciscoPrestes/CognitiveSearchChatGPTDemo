{"version":3,"file":"bent-d4cce1f4.js","sources":["../../../frontend/node_modules/bent/src/core.js","../../../frontend/node_modules/bent/src/browser.js"],"sourcesContent":["'use strict'\r\nconst encodings = new Set(['json', 'buffer', 'string'])\r\n\r\nmodule.exports = mkrequest => (...args) => {\r\n  const statusCodes = new Set()\r\n  let method\r\n  let encoding\r\n  let headers\r\n  let baseurl = ''\r\n\r\n  args.forEach(arg => {\r\n    if (typeof arg === 'string') {\r\n      if (arg.toUpperCase() === arg) {\r\n        if (method) {\r\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\r\n          throw new Error(msg)\r\n        } else {\r\n          method = arg\r\n        }\r\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\r\n        baseurl = arg\r\n      } else {\r\n        if (encodings.has(arg)) {\r\n          encoding = arg\r\n        } else {\r\n          throw new Error(`Unknown encoding, ${arg}`)\r\n        }\r\n      }\r\n    } else if (typeof arg === 'number') {\r\n      statusCodes.add(arg)\r\n    } else if (typeof arg === 'object') {\r\n      if (Array.isArray(arg) || arg instanceof Set) {\r\n        arg.forEach(code => statusCodes.add(code))\r\n      } else {\r\n        if (headers) {\r\n          throw new Error('Cannot set headers twice.')\r\n        }\r\n        headers = arg\r\n      }\r\n    } else {\r\n      throw new Error(`Unknown type: ${typeof arg}`)\r\n    }\r\n  })\r\n\r\n  if (!method) method = 'GET'\r\n  if (statusCodes.size === 0) {\r\n    statusCodes.add(200)\r\n  }\r\n\r\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\r\n}\r\n","'use strict'\r\n/* global fetch, btoa, Headers */\r\nconst core = require('./core')\r\n\r\nclass StatusError extends Error {\r\n  constructor (res, ...params) {\r\n    super(...params)\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, StatusError)\r\n    }\r\n\r\n    this.name = 'StatusError'\r\n    this.message = res.statusMessage\r\n    this.statusCode = res.status\r\n    this.res = res\r\n    this.json = res.json.bind(res)\r\n    this.text = res.text.bind(res)\r\n    this.arrayBuffer = res.arrayBuffer.bind(res)\r\n    let buffer\r\n    const get = () => {\r\n      if (!buffer) buffer = this.arrayBuffer()\r\n      return buffer\r\n    }\r\n    Object.defineProperty(this, 'responseBody', { get })\r\n    // match Node.js headers object\r\n    this.headers = {}\r\n    for (const [key, value] of res.headers.entries()) {\r\n      this.headers[key.toLowerCase()] = value\r\n    }\r\n  }\r\n}\r\n\r\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\r\n  _url = baseurl + (_url || '')\r\n  let parsed = new URL(_url)\r\n\r\n  if (!headers) headers = {}\r\n  if (parsed.username) {\r\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\r\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\r\n  }\r\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\r\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\r\n  }\r\n\r\n  if (body) {\r\n    if (body instanceof ArrayBuffer ||\r\n      ArrayBuffer.isView(body) ||\r\n      typeof body === 'string'\r\n    ) {\r\n      // noop\r\n    } else if (typeof body === 'object') {\r\n      body = JSON.stringify(body)\r\n      headers['Content-Type'] = 'application/json'\r\n    } else {\r\n      throw new Error('Unknown body type.')\r\n    }\r\n  }\r\n\r\n  _headers = new Headers({ ...(headers || {}), ..._headers })\r\n\r\n  const resp = await fetch(parsed, { method, headers: _headers, body })\r\n  resp.statusCode = resp.status\r\n\r\n  if (!statusCodes.has(resp.status)) {\r\n    throw new StatusError(resp)\r\n  }\r\n\r\n  if (encoding === 'json') return resp.json()\r\n  else if (encoding === 'buffer') return resp.arrayBuffer()\r\n  else if (encoding === 'string') return resp.text()\r\n  else return resp\r\n}\r\n\r\nmodule.exports = core(mkrequest)\r\n"],"names":["encodings","core","mkrequest","args","statusCodes","method","encoding","headers","baseurl","arg","msg","code","require$$0","StatusError","res","params","buffer","key","value","_url","body","_headers","parsed","resp","browser"],"mappings":"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"}