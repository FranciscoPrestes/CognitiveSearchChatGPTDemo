{"version":3,"file":"@griffel-cbe60fd0.js","sources":["../../../frontend/node_modules/@griffel/core/constants.esm.js","../../../frontend/node_modules/@griffel/core/runtime/utils/hashSequence.esm.js","../../../frontend/node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js","../../../frontend/node_modules/@griffel/core/mergeClasses.esm.js","../../../frontend/node_modules/@griffel/core/runtime/utils/normalizeCSSBucketEntry.esm.js","../../../frontend/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js","../../../frontend/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js","../../../frontend/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js","../../../frontend/node_modules/@griffel/core/__styles.esm.js","../../../frontend/node_modules/@griffel/react/RendererContext.esm.js","../../../frontend/node_modules/@griffel/react/TextDirectionContext.esm.js","../../../frontend/node_modules/@griffel/react/__styles.esm.js"],"sourcesContent":["// ----\r\n// Heads up!\r\n// These constants are global and will be shared between Griffel instances.\r\n// Any change in them should happen only in a MAJOR version. If it happens,\r\n// please change \"__NAMESPACE_PREFIX__\" to include a version.\r\nconst __GLOBAL__ = typeof window === 'undefined' ? global : window;\r\nconst __NAMESPACE_PREFIX__ = '@griffel/';\r\nfunction getGlobalVar(name, defaultValue) {\r\n  if (!__GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)]) {\r\n    __GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)] = defaultValue;\r\n  }\r\n  return __GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)];\r\n}\r\n/** @internal */\r\nconst DEBUG_RESET_CLASSES = /*#__PURE__*/getGlobalVar('DEBUG_RESET_CLASSES', {});\r\n/** @internal */\r\nconst DEFINITION_LOOKUP_TABLE = /*#__PURE__*/getGlobalVar('DEFINITION_LOOKUP_TABLE', {});\r\n// ----\r\n/** @internal */\r\nconst DATA_BUCKET_ATTR = 'data-make-styles-bucket';\r\n/** @internal */\r\nconst HASH_PREFIX = 'f';\r\n/** @internal */\r\nconst RESET_HASH_PREFIX = 'r';\r\n/** @internal */\r\nconst SEQUENCE_HASH_LENGTH = 7;\r\n/** @internal */\r\nconst SEQUENCE_PREFIX = '___';\r\n/** @internal */\r\nconst DEBUG_SEQUENCE_SEPARATOR = '_';\r\n/** @internal */\r\nconst SEQUENCE_SIZE = process.env.NODE_ENV === 'production' ? SEQUENCE_PREFIX.length + SEQUENCE_HASH_LENGTH : SEQUENCE_PREFIX.length + SEQUENCE_HASH_LENGTH + DEBUG_SEQUENCE_SEPARATOR.length + SEQUENCE_HASH_LENGTH;\r\n// indexes for values in LookupItem tuple\r\n/** @internal */\r\nconst LOOKUP_DEFINITIONS_INDEX = 0;\r\n/** @internal */\r\nconst LOOKUP_DIR_INDEX = 1;\r\n// This collection is a map simply for faster access when checking if a CSS property is unsupported\r\n/** @internal */\r\nconst UNSUPPORTED_CSS_PROPERTIES = {\r\n  all: 1,\r\n  animation: 1,\r\n  background: 1,\r\n  backgroundPosition: 1,\r\n  border: 1,\r\n  borderBlock: 1,\r\n  borderBlockEnd: 1,\r\n  borderBlockStart: 1,\r\n  borderBottom: 1,\r\n  borderColor: 1,\r\n  borderImage: 1,\r\n  borderInline: 1,\r\n  borderInlineEnd: 1,\r\n  borderInlineStart: 1,\r\n  borderLeft: 1,\r\n  borderRadius: 1,\r\n  borderRight: 1,\r\n  borderStyle: 1,\r\n  borderTop: 1,\r\n  borderWidth: 1,\r\n  columns: 1,\r\n  columnRule: 1,\r\n  flex: 1,\r\n  flexFlow: 1,\r\n  font: 1,\r\n  gap: 1,\r\n  grid: 1,\r\n  gridArea: 1,\r\n  gridColumn: 1,\r\n  gridRow: 1,\r\n  gridTemplate: 1,\r\n  lineClamp: 1,\r\n  listStyle: 1,\r\n  margin: 1,\r\n  mask: 1,\r\n  maskBorder: 1,\r\n  motion: 1,\r\n  offset: 1,\r\n  outline: 1,\r\n  overflow: 1,\r\n  overscrollBehavior: 1,\r\n  padding: 1,\r\n  placeItems: 1,\r\n  placeSelf: 1,\r\n  textDecoration: 1,\r\n  textEmphasis: 1,\r\n  transition: 1\r\n};\r\n\r\nexport { DATA_BUCKET_ATTR, DEBUG_RESET_CLASSES, DEBUG_SEQUENCE_SEPARATOR, DEFINITION_LOOKUP_TABLE, HASH_PREFIX, LOOKUP_DEFINITIONS_INDEX, LOOKUP_DIR_INDEX, RESET_HASH_PREFIX, SEQUENCE_HASH_LENGTH, SEQUENCE_PREFIX, SEQUENCE_SIZE, UNSUPPORTED_CSS_PROPERTIES };\r\n//# sourceMappingURL=constants.esm.js.map\r\n","import hashString from '@emotion/hash';\r\nimport { SEQUENCE_PREFIX, DEBUG_SEQUENCE_SEPARATOR, SEQUENCE_HASH_LENGTH } from '../../constants.esm.js';\r\n\r\nfunction padEndHash(value) {\r\n  const hashLength = value.length;\r\n  if (hashLength === SEQUENCE_HASH_LENGTH) {\r\n    return value;\r\n  }\r\n  for (let i = hashLength; i < SEQUENCE_HASH_LENGTH; i++) {\r\n    value += '0';\r\n  }\r\n  return value;\r\n}\r\nfunction hashSequence(classes, dir, sequenceIds = []) {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return SEQUENCE_PREFIX + padEndHash(hashString(classes + dir));\r\n  }\r\n  return SEQUENCE_PREFIX + padEndHash(hashString(classes + dir)) + DEBUG_SEQUENCE_SEPARATOR + padEndHash(hashString(sequenceIds.join('')));\r\n}\r\n\r\nexport { hashSequence };\r\n//# sourceMappingURL=hashSequence.esm.js.map\r\n","import { DEFINITION_LOOKUP_TABLE } from '../constants.esm.js';\r\nimport { hashSequence } from './utils/hashSequence.esm.js';\r\n\r\n/**\r\n * Reduces a classname map for slot to a classname string. Uses classnames according to text directions.\r\n *\r\n * @private\r\n */\r\nfunction reduceToClassName(classMap, dir) {\r\n  let className = '';\r\n  // eslint-disable-next-line guard-for-in\r\n  for (const propertyHash in classMap) {\r\n    const classNameMapping = classMap[propertyHash];\r\n    if (classNameMapping) {\r\n      const hasRTLClassName = Array.isArray(classNameMapping);\r\n      if (dir === 'rtl') {\r\n        className += (hasRTLClassName ? classNameMapping[1] : classNameMapping) + ' ';\r\n      } else {\r\n        className += (hasRTLClassName ? classNameMapping[0] : classNameMapping) + ' ';\r\n      }\r\n    }\r\n  }\r\n  return className.slice(0, -1);\r\n}\r\n/**\r\n * Reduces classname maps for slots to classname strings. Registers them in a definition cache to be used by\r\n * `mergeClasses()`.\r\n *\r\n * @internal\r\n */\r\nfunction reduceToClassNameForSlots(classesMapBySlot, dir) {\r\n  const classNamesForSlots = {};\r\n  // eslint-disable-next-line guard-for-in\r\n  for (const slotName in classesMapBySlot) {\r\n    const slotClasses = reduceToClassName(classesMapBySlot[slotName], dir);\r\n    // Handles a case when there are no classes in a set i.e. \"makeStyles({ root: {} })\"\r\n    if (slotClasses === '') {\r\n      classNamesForSlots[slotName] = '';\r\n      continue;\r\n    }\r\n    const sequenceHash = hashSequence(slotClasses, dir);\r\n    const resultSlotClasses = sequenceHash + ' ' + slotClasses;\r\n    DEFINITION_LOOKUP_TABLE[sequenceHash] = [classesMapBySlot[slotName], dir];\r\n    classNamesForSlots[slotName] = resultSlotClasses;\r\n  }\r\n  return classNamesForSlots;\r\n}\r\n\r\nexport { reduceToClassName, reduceToClassNameForSlots };\r\n//# sourceMappingURL=reduceToClassNameForSlots.esm.js.map\r\n","import { SEQUENCE_PREFIX, RESET_HASH_PREFIX, DEBUG_RESET_CLASSES, SEQUENCE_SIZE, DEFINITION_LOOKUP_TABLE, LOOKUP_DEFINITIONS_INDEX, LOOKUP_DIR_INDEX } from './constants.esm.js';\r\nimport { hashSequence } from './runtime/utils/hashSequence.esm.js';\r\nimport { reduceToClassName } from './runtime/reduceToClassNameForSlots.esm.js';\r\n\r\n// Contains a mapping of previously resolved sequences of atomic classnames\r\nconst mergeClassesCachedResults = {};\r\nfunction mergeClasses() {\r\n  // arguments are parsed manually to avoid double loops as TS & Babel transforms rest via an additional loop\r\n  // @see https://babeljs.io/docs/en/babel-plugin-transform-parameters\r\n  /* eslint-disable prefer-rest-params */\r\n  let dir = null;\r\n  let resultClassName = '';\r\n  // Is used as a cache key to avoid object merging\r\n  let sequenceMatch = '';\r\n  const sequencesIds = new Array(arguments.length);\r\n  let containsResetClassName = '';\r\n  for (let i = 0; i < arguments.length; i++) {\r\n    const className = arguments[i];\r\n    if (typeof className === 'string' && className !== '') {\r\n      // All classes generated by `makeStyles()` are prefixed by a sequence hash, this allows to identify class sets\r\n      // without parsing each className in a string\r\n      const sequenceIndex = className.indexOf(SEQUENCE_PREFIX);\r\n      if (sequenceIndex === -1) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          className.split(' ').forEach(entry => {\r\n            if (entry.startsWith(RESET_HASH_PREFIX) && DEBUG_RESET_CLASSES[entry]) {\r\n              if (containsResetClassName) {\r\n                // eslint-disable-next-line no-console\r\n                console.error('mergeClasses(): a passed string contains multiple classes produced by makeResetStyles (' + `${className} & ${resultClassName}, this will lead to non-deterministic behavior. Learn more:` + 'https://griffel.js.org/react/api/make-reset-styles#limitations' + '\\n' + `Source string: ${className}`);\r\n              } else {\r\n                containsResetClassName = entry;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        resultClassName += className + ' ';\r\n      } else {\r\n        const sequenceId = className.substr(sequenceIndex, SEQUENCE_SIZE);\r\n        // Handles a case with mixed classnames, i.e. \"ui-button ATOMIC_CLASSES\"\r\n        if (sequenceIndex > 0) {\r\n          resultClassName += className.slice(0, sequenceIndex);\r\n        }\r\n        sequenceMatch += sequenceId;\r\n        sequencesIds[i] = sequenceId;\r\n      }\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (className.indexOf(SEQUENCE_PREFIX, sequenceIndex + 1) !== -1) {\r\n          // eslint-disable-next-line no-console\r\n          console.error('mergeClasses(): a passed string contains multiple identifiers of atomic classes (classes that start ' + `with \"${SEQUENCE_PREFIX}\"), it's possible that passed classes were concatenated in a wrong way. ` + `Source string: ${className}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // .slice() there allows to avoid trailing space for non-atomic classes\r\n  // \"ui-button ui-flex \" => \"ui-button ui-flex\"\r\n  if (sequenceMatch === '') {\r\n    return resultClassName.slice(0, -1);\r\n  }\r\n  // It's safe to reuse results to avoid continuous merging as results are stable\r\n  // \"__seq1 ... __seq2 ...\" => \"__seq12 ...\"\r\n  const mergeClassesResult = mergeClassesCachedResults[sequenceMatch];\r\n  if (mergeClassesResult !== undefined) {\r\n    return resultClassName + mergeClassesResult;\r\n  }\r\n  const sequenceMappings = [];\r\n  for (let i = 0; i < arguments.length; i++) {\r\n    const sequenceId = sequencesIds[i];\r\n    if (sequenceId) {\r\n      const sequenceMapping = DEFINITION_LOOKUP_TABLE[sequenceId];\r\n      if (sequenceMapping) {\r\n        sequenceMappings.push(sequenceMapping[LOOKUP_DEFINITIONS_INDEX]);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (dir !== null && dir !== sequenceMapping[LOOKUP_DIR_INDEX]) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`mergeClasses(): a passed string contains an identifier (${sequenceId}) that has different direction ` + `(dir=\"${sequenceMapping[1] ? 'rtl' : 'ltr'}\") setting than other classes. This is not supported. ` + `Source string: ${arguments[i]}`);\r\n          }\r\n        }\r\n        dir = sequenceMapping[LOOKUP_DIR_INDEX];\r\n      } else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          // eslint-disable-next-line no-console\r\n          console.error(`mergeClasses(): a passed string contains an identifier (${sequenceId}) that does not match any entry ` + `in cache. Source string: ${arguments[i]}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // eslint-disable-next-line prefer-spread\r\n  const resultDefinitions = Object.assign.apply(Object,\r\n  // .assign() mutates the first object, we can't mutate mappings as it will produce invalid results later\r\n  [{}].concat(sequenceMappings));\r\n  let atomicClassNames = reduceToClassName(resultDefinitions, dir);\r\n  // Each merge of classes generates a new sequence of atomic classes that needs to be registered\r\n  const newSequenceHash = hashSequence(atomicClassNames, dir, sequencesIds);\r\n  atomicClassNames = newSequenceHash + ' ' + atomicClassNames;\r\n  mergeClassesCachedResults[sequenceMatch] = atomicClassNames;\r\n  DEFINITION_LOOKUP_TABLE[newSequenceHash] = [resultDefinitions, dir];\r\n  return resultClassName + atomicClassNames;\r\n}\r\n\r\nexport { mergeClasses, mergeClassesCachedResults };\r\n//# sourceMappingURL=mergeClasses.esm.js.map\r\n","/**\r\n * @internal\r\n *\r\n * @param entry - CSS bucket entry that can be either a string or an array\r\n * @returns An array where the first element is the CSS rule\r\n */\r\nfunction normalizeCSSBucketEntry(entry) {\r\n  if (!Array.isArray(entry)) {\r\n    return [entry];\r\n  }\r\n  if (process.env.NODE_ENV !== 'production' && entry.length > 2) {\r\n    throw new Error('CSS Bucket contains an entry with greater than 2 items, please report this to https://github.com/microsoft/griffel/issues');\r\n  }\r\n  return entry;\r\n}\r\n\r\nexport { normalizeCSSBucketEntry };\r\n//# sourceMappingURL=normalizeCSSBucketEntry.esm.js.map\r\n","import { DATA_BUCKET_ATTR } from '../constants.esm.js';\r\n\r\nfunction createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes) {\r\n  // no CSSStyleSheet in SSR, just append rules here for server render\r\n  const __cssRulesForSSR = [];\r\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\r\n  if (styleElement) {\r\n    for (const attrName in elementAttributes) {\r\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\r\n    }\r\n  }\r\n  function insertRule(rule) {\r\n    if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {\r\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\r\n    }\r\n    return __cssRulesForSSR.push(rule);\r\n  }\r\n  return {\r\n    elementAttributes,\r\n    insertRule,\r\n    element: styleElement,\r\n    bucketName,\r\n    cssRules() {\r\n      if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {\r\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\r\n      }\r\n      return __cssRulesForSSR;\r\n    }\r\n  };\r\n}\r\nfunction createIsomorphicStyleSheetFromElement(element) {\r\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\r\n    acc[attr.name] = attr.value;\r\n    return acc;\r\n  }, {});\r\n  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[DATA_BUCKET_ATTR], elementAttributes);\r\n  return stylesheet;\r\n}\r\n\r\nexport { createIsomorphicStyleSheet, createIsomorphicStyleSheetFromElement };\r\n//# sourceMappingURL=createIsomorphicStyleSheet.esm.js.map\r\n","import { DATA_BUCKET_ATTR } from '../constants.esm.js';\r\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet.esm.js';\r\n\r\n/**\r\n * Ordered style buckets using their short pseudo name.\r\n *\r\n * @internal\r\n */\r\nconst styleBucketOrdering = [\r\n// reset styles\r\n'r',\r\n// catch-all\r\n'd',\r\n// link\r\n'l',\r\n// visited\r\n'v',\r\n// focus-within\r\n'w',\r\n// focus\r\n'f',\r\n// focus-visible\r\n'i',\r\n// hover\r\n'h',\r\n// active\r\n'a',\r\n// keyframes\r\n'k',\r\n// at-rules\r\n't',\r\n// @media rules\r\n'm'];\r\n// avoid repeatedly calling `indexOf`to determine order during new insertions\r\nconst styleBucketOrderingMap = /*#__PURE__*/styleBucketOrdering.reduce((acc, cur, j) => {\r\n  acc[cur] = j;\r\n  return acc;\r\n}, {});\r\n/**\r\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\r\n */\r\nfunction getStyleSheetForBucket(bucketName, targetDocument, insertionPoint, renderer, metadata = {}) {\r\n  const isMediaBucket = bucketName === 'm';\r\n  const stylesheetKey = isMediaBucket ? bucketName + metadata['m'] : bucketName;\r\n  if (!renderer.stylesheets[stylesheetKey]) {\r\n    const tag = targetDocument && targetDocument.createElement('style');\r\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, {\r\n      ...renderer.styleElementAttributes,\r\n      ...(isMediaBucket && {\r\n        media: metadata['m']\r\n      })\r\n    });\r\n    renderer.stylesheets[stylesheetKey] = stylesheet;\r\n    if (targetDocument && tag) {\r\n      targetDocument.head.insertBefore(tag, findInsertionPoint(targetDocument, insertionPoint, bucketName, renderer, metadata));\r\n    }\r\n  }\r\n  return renderer.stylesheets[stylesheetKey];\r\n}\r\n/**\r\n * Finds an element before which the new bucket style element should be inserted following the bucket sort order.\r\n *\r\n * @param targetDocument - A document\r\n * @param insertionPoint - An element that will be used as an initial insertion point\r\n * @param targetBucket - The bucket that should be inserted to DOM\r\n * @param renderer - Griffel renderer\r\n * @param metadata - metadata for CSS rule\r\n * @returns - Smallest style element with greater sort order than the current bucket\r\n */\r\nfunction findInsertionPoint(targetDocument, insertionPoint, targetBucket, renderer, metadata) {\r\n  const targetOrder = styleBucketOrderingMap[targetBucket];\r\n  // Similar to javascript sort comparators where\r\n  // a positive value is increasing sort order\r\n  // a negative value is decreasing sort order\r\n  let comparer = el => targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR)];\r\n  let styleElements = targetDocument.head.querySelectorAll(`[${DATA_BUCKET_ATTR}]`);\r\n  if (targetBucket === 'm' && metadata) {\r\n    const mediaElements = targetDocument.head.querySelectorAll(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\r\n    // only reduce the scope of the search and change comparer\r\n    // if there are other media buckets already on the page\r\n    if (mediaElements.length) {\r\n      styleElements = mediaElements;\r\n      comparer = el => renderer.compareMediaQueries(metadata['m'], el.media);\r\n    }\r\n  }\r\n  const length = styleElements.length;\r\n  let index = length - 1;\r\n  while (index >= 0) {\r\n    const styleElement = styleElements.item(index);\r\n    if (comparer(styleElement) > 0) {\r\n      return styleElement.nextSibling;\r\n    }\r\n    index--;\r\n  }\r\n  if (length > 0) {\r\n    return styleElements.item(0);\r\n  }\r\n  return insertionPoint ? insertionPoint.nextSibling : null;\r\n}\r\n\r\nexport { getStyleSheetForBucket, styleBucketOrdering };\r\n//# sourceMappingURL=getStyleSheetForBucket.esm.js.map\r\n","import { injectDevTools } from '../devtools/injectDevTools.esm.js';\r\nimport { isDevToolsEnabled } from '../devtools/isDevToolsEnabled.esm.js';\r\nimport { debugData } from '../devtools/store.esm.js';\r\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry.esm.js';\r\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket.esm.js';\r\n\r\nlet lastIndex = 0;\r\n/** @internal */\r\nconst defaultCompareMediaQueries = (a, b) => a < b ? -1 : a > b ? 1 : 0;\r\n/**\r\n * Creates a new instances of a renderer.\r\n *\r\n * @public\r\n */\r\nfunction createDOMRenderer(targetDocument = typeof document === 'undefined' ? undefined : document, options = {}) {\r\n  const {\r\n    unstable_filterCSSRule,\r\n    insertionPoint,\r\n    styleElementAttributes,\r\n    compareMediaQueries = defaultCompareMediaQueries\r\n  } = options;\r\n  const renderer = {\r\n    insertionCache: {},\r\n    stylesheets: {},\r\n    styleElementAttributes: Object.freeze(styleElementAttributes),\r\n    compareMediaQueries,\r\n    id: `d${lastIndex++}`,\r\n    insertCSSRules(cssRules) {\r\n      // eslint-disable-next-line guard-for-in\r\n      for (const styleBucketName in cssRules) {\r\n        const cssRulesForBucket = cssRules[styleBucketName];\r\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\r\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\r\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\r\n          const sheet = getStyleSheetForBucket(styleBucketName, targetDocument, insertionPoint || null, renderer, metadata);\r\n          if (renderer.insertionCache[ruleCSS]) {\r\n            continue;\r\n          }\r\n          renderer.insertionCache[ruleCSS] = styleBucketName;\r\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n            debugData.addCSSRule(ruleCSS);\r\n          }\r\n          try {\r\n            if (unstable_filterCSSRule) {\r\n              if (unstable_filterCSSRule(ruleCSS)) {\r\n                sheet.insertRule(ruleCSS);\r\n              }\r\n            } else {\r\n              sheet.insertRule(ruleCSS);\r\n            }\r\n          } catch (e) {\r\n            // We've disabled these warnings due to false-positive errors with browser prefixes\r\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\r\n              // eslint-disable-next-line no-console\r\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  if (targetDocument && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n    injectDevTools(targetDocument);\r\n  }\r\n  return renderer;\r\n}\r\n/**\r\n * Suffixes to be ignored in case of error\r\n */\r\nconst ignoreSuffixes = /*#__PURE__*/['-moz-placeholder', '-moz-focus-inner', '-moz-focusring', '-ms-input-placeholder', '-moz-read-write', '-moz-read-only'].join('|');\r\nconst ignoreSuffixesRegex = /*#__PURE__*/new RegExp(`:(${ignoreSuffixes})`);\r\n\r\nexport { createDOMRenderer, defaultCompareMediaQueries };\r\n//# sourceMappingURL=createDOMRenderer.esm.js.map\r\n","import './constants.esm.js';\r\nimport { debugData } from './devtools/store.esm.js';\r\nimport { isDevToolsEnabled } from './devtools/isDevToolsEnabled.esm.js';\r\nimport { getSourceURLfromError } from './devtools/getSourceURLfromError.esm.js';\r\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots.esm.js';\r\n\r\n/**\r\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\r\n *\r\n * @internal\r\n */\r\nfunction __styles(classesMapBySlot, cssRules) {\r\n  const insertionCache = {};\r\n  let ltrClassNamesForSlots = null;\r\n  let rtlClassNamesForSlots = null;\r\n  let sourceURL;\r\n  if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n    sourceURL = getSourceURLfromError();\r\n  }\r\n  function computeClasses(options) {\r\n    const {\r\n      dir,\r\n      renderer\r\n    } = options;\r\n    const isLTR = dir === 'ltr';\r\n    // As RTL classes are different they should have a different cache key for insertion\r\n    const rendererId = isLTR ? renderer.id : renderer.id + 'r';\r\n    if (isLTR) {\r\n      if (ltrClassNamesForSlots === null) {\r\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\r\n      }\r\n    } else {\r\n      if (rtlClassNamesForSlots === null) {\r\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\r\n      }\r\n    }\r\n    if (insertionCache[rendererId] === undefined) {\r\n      renderer.insertCSSRules(cssRules);\r\n      insertionCache[rendererId] = true;\r\n    }\r\n    const classNamesForSlots = isLTR ? ltrClassNamesForSlots : rtlClassNamesForSlots;\r\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n      debugData.addSequenceDetails(classNamesForSlots, sourceURL);\r\n    }\r\n    return classNamesForSlots;\r\n  }\r\n  return computeClasses;\r\n}\r\n\r\nexport { __styles };\r\n//# sourceMappingURL=__styles.esm.js.map\r\n","import { rehydrateRendererCache, createDOMRenderer } from '@griffel/core';\r\nimport * as React from 'react';\r\n\r\n/**\r\n * Verifies if an application can use DOM.\r\n */\r\nfunction canUseDOM() {\r\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\r\n}\r\n/**\r\n * @private\r\n */\r\nconst RendererContext = /*#__PURE__*/React.createContext( /*#__PURE__*/createDOMRenderer());\r\n/**\r\n * @public\r\n */\r\nconst RendererProvider = ({\r\n  children,\r\n  renderer,\r\n  targetDocument\r\n}) => {\r\n  if (canUseDOM()) {\r\n    // This if statement technically breaks the rules of hooks, but is safe because the condition never changes after\r\n    // mounting.\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useMemo(() => {\r\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\r\n      // avoid double insertion of classes\r\n      rehydrateRendererCache(renderer, targetDocument);\r\n    }, [renderer, targetDocument]);\r\n  }\r\n  return /*#__PURE__*/React.createElement(RendererContext.Provider, {\r\n    value: renderer\r\n  }, children);\r\n};\r\n/**\r\n * Returns an instance of current makeStyles() renderer.\r\n *\r\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\r\n */\r\nfunction useRenderer() {\r\n  return React.useContext(RendererContext);\r\n}\r\n\r\nexport { RendererProvider, useRenderer };\r\n//# sourceMappingURL=RendererContext.esm.js.map\r\n","import * as React from 'react';\r\n\r\n/**\r\n * @private\r\n */\r\nconst TextDirectionContext = /*#__PURE__*/React.createContext('ltr');\r\n/**\r\n * @public\r\n */\r\nconst TextDirectionProvider = ({\r\n  children,\r\n  dir\r\n}) => {\r\n  return /*#__PURE__*/React.createElement(TextDirectionContext.Provider, {\r\n    value: dir\r\n  }, children);\r\n};\r\n/**\r\n * Returns current directionality of the element's text.\r\n *\r\n * @private\r\n */\r\nfunction useTextDirection() {\r\n  return React.useContext(TextDirectionContext);\r\n}\r\n\r\nexport { TextDirectionProvider, useTextDirection };\r\n//# sourceMappingURL=TextDirectionContext.esm.js.map\r\n","import { __styles as __styles$1 } from '@griffel/core';\r\nimport { useRenderer } from './RendererContext.esm.js';\r\nimport { useTextDirection } from './TextDirectionContext.esm.js';\r\n\r\n/**\r\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction __styles(classesMapBySlot, cssRules) {\r\n  const getStyles = __styles$1(classesMapBySlot, cssRules);\r\n  return function useClasses() {\r\n    const dir = useTextDirection();\r\n    const renderer = useRenderer();\r\n    return getStyles({\r\n      dir,\r\n      renderer\r\n    });\r\n  };\r\n}\r\n\r\nexport { __styles };\r\n//# sourceMappingURL=__styles.esm.js.map\r\n"],"names":["__GLOBAL__","__NAMESPACE_PREFIX__","getGlobalVar","name","defaultValue","DEFINITION_LOOKUP_TABLE","DATA_BUCKET_ATTR","SEQUENCE_HASH_LENGTH","SEQUENCE_PREFIX","SEQUENCE_SIZE","LOOKUP_DEFINITIONS_INDEX","LOOKUP_DIR_INDEX","padEndHash","value","hashLength","i","hashSequence","classes","dir","sequenceIds","hashString","reduceToClassName","classMap","className","propertyHash","classNameMapping","hasRTLClassName","reduceToClassNameForSlots","classesMapBySlot","classNamesForSlots","slotName","slotClasses","sequenceHash","resultSlotClasses","mergeClassesCachedResults","mergeClasses","resultClassName","sequenceMatch","sequencesIds","sequenceIndex","sequenceId","mergeClassesResult","sequenceMappings","sequenceMapping","resultDefinitions","atomicClassNames","newSequenceHash","normalizeCSSBucketEntry","entry","createIsomorphicStyleSheet","styleElement","bucketName","elementAttributes","__cssRulesForSSR","attrName","insertRule","rule","cssRule","styleBucketOrdering","styleBucketOrderingMap","acc","cur","j","getStyleSheetForBucket","targetDocument","insertionPoint","renderer","metadata","isMediaBucket","stylesheetKey","tag","stylesheet","findInsertionPoint","targetBucket","targetOrder","comparer","el","styleElements","mediaElements","length","index","lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","options","unstable_filterCSSRule","styleElementAttributes","compareMediaQueries","cssRules","styleBucketName","cssRulesForBucket","l","ruleCSS","sheet","__styles","insertionCache","ltrClassNamesForSlots","rtlClassNamesForSlots","computeClasses","isLTR","rendererId","RendererContext","React.createContext","useRenderer","React.useContext","TextDirectionContext","useTextDirection","getStyles","__styles$1"],"mappings":"oHAKA,MAAMA,EAAa,OAAO,OAAW,IAAc,OAAS,OACtDC,EAAuB,YAC7B,SAASC,EAAaC,EAAMC,EAAc,CACxC,OAAKJ,EAAW,OAAO,IAAIC,EAAuBE,CAAI,CAAC,IACrDH,EAAW,OAAO,IAAIC,EAAuBE,CAAI,CAAC,EAAIC,GAEjDJ,EAAW,OAAO,IAAIC,EAAuBE,CAAI,CAAC,CAC3D,CAIA,MAAME,EAAuCH,EAAa,0BAA2B,CAAA,CAAE,EAGjFI,EAAmB,0BAMnBC,EAAuB,EAEvBC,EAAkB,MAIlBC,EAAwDD,EAAgB,OAASD,EAGjFG,EAA2B,EAE3BC,EAAmB,ECjCzB,SAASC,EAAWC,EAAO,CACzB,MAAMC,EAAaD,EAAM,OACzB,GAAIC,IAAeP,EACjB,OAAOM,EAET,QAASE,EAAID,EAAYC,EAAIR,EAAsBQ,IACjDF,GAAS,IAEX,OAAOA,CACT,CACA,SAASG,EAAaC,EAASC,EAAKC,EAAc,CAAA,EAAI,CAElD,OAAOX,EAAkBI,EAAWQ,EAAWH,EAAUC,CAAG,CAAC,CAGjE,CCVA,SAASG,EAAkBC,EAAUJ,EAAK,CACxC,IAAIK,EAAY,GAEhB,UAAWC,KAAgBF,EAAU,CACnC,MAAMG,EAAmBH,EAASE,CAAY,EAC9C,GAAIC,EAAkB,CACpB,MAAMC,EAAkB,MAAM,QAAQD,CAAgB,EAClDP,IAAQ,MACVK,IAAcG,EAAkBD,EAAiB,CAAC,EAAIA,GAAoB,IAE1EF,IAAcG,EAAkBD,EAAiB,CAAC,EAAIA,GAAoB,GAE7E,CACF,CACD,OAAOF,EAAU,MAAM,EAAG,EAAE,CAC9B,CAOA,SAASI,EAA0BC,EAAkBV,EAAK,CACxD,MAAMW,EAAqB,CAAA,EAE3B,UAAWC,KAAYF,EAAkB,CACvC,MAAMG,EAAcV,EAAkBO,EAAiBE,CAAQ,EAAGZ,CAAG,EAErE,GAAIa,IAAgB,GAAI,CACtBF,EAAmBC,CAAQ,EAAI,GAC/B,QACD,CACD,MAAME,EAAehB,EAAae,EAAab,CAAG,EAC5Ce,EAAoBD,EAAe,IAAMD,EAC/C1B,EAAwB2B,CAAY,EAAI,CAACJ,EAAiBE,CAAQ,EAAGZ,CAAG,EACxEW,EAAmBC,CAAQ,EAAIG,CAChC,CACD,OAAOJ,CACT,CCzCA,MAAMK,EAA4B,CAAA,EAClC,SAASC,GAAe,CAItB,IAAIjB,EAAM,KACNkB,EAAkB,GAElBC,EAAgB,GACpB,MAAMC,EAAe,IAAI,MAAM,UAAU,MAAM,EAE/C,QAASvB,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,MAAMQ,EAAY,UAAUR,CAAC,EAC7B,GAAI,OAAOQ,GAAc,UAAYA,IAAc,GAAI,CAGrD,MAAMgB,EAAgBhB,EAAU,QAAQf,CAAe,EACvD,GAAI+B,IAAkB,GAapBH,GAAmBb,EAAY,QAC1B,CACL,MAAMiB,EAAajB,EAAU,OAAOgB,EAAe9B,CAAa,EAE5D8B,EAAgB,IAClBH,GAAmBb,EAAU,MAAM,EAAGgB,CAAa,GAErDF,GAAiBG,EACjBF,EAAavB,CAAC,EAAIyB,CACnB,CAOF,CACF,CAGD,GAAIH,IAAkB,GACpB,OAAOD,EAAgB,MAAM,EAAG,EAAE,EAIpC,MAAMK,EAAqBP,EAA0BG,CAAa,EAClE,GAAII,IAAuB,OACzB,OAAOL,EAAkBK,EAE3B,MAAMC,EAAmB,CAAA,EACzB,QAAS3B,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,MAAMyB,EAAaF,EAAavB,CAAC,EACjC,GAAIyB,EAAY,CACd,MAAMG,EAAkBtC,EAAwBmC,CAAU,EACtDG,IACFD,EAAiB,KAAKC,EAAgBjC,CAAwB,CAAC,EAO/DQ,EAAMyB,EAAgBhC,CAAgB,EAOzC,CACF,CAED,MAAMiC,EAAoB,OAAO,OAAO,MAAM,OAE9C,CAAC,EAAE,EAAE,OAAOF,CAAgB,CAAC,EAC7B,IAAIG,EAAmBxB,EAAkBuB,EAAmB1B,CAAG,EAE/D,MAAM4B,EAAkB9B,EAAa6B,EAAkB3B,EAAKoB,CAAY,EACxE,OAAAO,EAAmBC,EAAkB,IAAMD,EAC3CX,EAA0BG,CAAa,EAAIQ,EAC3CxC,EAAwByC,CAAe,EAAI,CAACF,EAAmB1B,CAAG,EAC3DkB,EAAkBS,CAC3B,CC3FA,SAASE,EAAwBC,EAAO,CACtC,OAAK,MAAM,QAAQA,CAAK,EAMjBA,EALE,CAACA,CAAK,CAMjB,CCZA,SAASC,EAA2BC,EAAcC,EAAYC,EAAmB,CAE/E,MAAMC,EAAmB,CAAA,EAEzB,GADAD,EAAkB9C,CAAgB,EAAI6C,EAClCD,EACF,UAAWI,KAAYF,EACrBF,EAAa,aAAaI,EAAUF,EAAkBE,CAAQ,CAAC,EAGnE,SAASC,EAAWC,EAAM,CACxB,OAAIN,GAAiB,MAA2CA,EAAa,MACpEA,EAAa,MAAM,WAAWM,EAAMN,EAAa,MAAM,SAAS,MAAM,EAExEG,EAAiB,KAAKG,CAAI,CAClC,CACD,MAAO,CACL,kBAAAJ,EACA,WAAAG,EACA,QAASL,EACT,WAAAC,EACA,UAAW,CACT,OAAID,GAAiB,MAA2CA,EAAa,MACpE,MAAM,KAAKA,EAAa,MAAM,QAAQ,EAAE,IAAIO,GAAWA,EAAQ,OAAO,EAExEJ,CACR,CACL,CACA,CCrBA,MAAMK,EAAsB,CAE5B,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,IAEA,GAAG,EAEGC,EAAsCD,EAAoB,OAAO,CAACE,EAAKC,EAAKC,KAChFF,EAAIC,CAAG,EAAIC,EACJF,GACN,CAAE,CAAA,EAIL,SAASG,EAAuBZ,EAAYa,EAAgBC,EAAgBC,EAAUC,EAAW,GAAI,CACnG,MAAMC,EAAgBjB,IAAe,IAC/BkB,EAAgBD,EAAgBjB,EAAagB,EAAS,EAAOhB,EACnE,GAAI,CAACe,EAAS,YAAYG,CAAa,EAAG,CACxC,MAAMC,EAAMN,GAAkBA,EAAe,cAAc,OAAO,EAC5DO,EAAatB,EAA2BqB,EAAKnB,EAAY,CAC7D,GAAGe,EAAS,uBACZ,GAAIE,GAAiB,CACnB,MAAOD,EAAS,CACxB,CACA,CAAK,EACDD,EAAS,YAAYG,CAAa,EAAIE,EAClCP,GAAkBM,GACpBN,EAAe,KAAK,aAAaM,EAAKE,EAAmBR,EAAgBC,EAAgBd,EAAYe,EAAUC,CAAQ,CAAC,CAE3H,CACD,OAAOD,EAAS,YAAYG,CAAa,CAC3C,CAWA,SAASG,EAAmBR,EAAgBC,EAAgBQ,EAAcP,EAAUC,EAAU,CAC5F,MAAMO,EAAcf,EAAuBc,CAAY,EAIvD,IAAIE,EAAWC,GAAMF,EAAcf,EAAuBiB,EAAG,aAAatE,CAAgB,CAAC,EACvFuE,EAAgBb,EAAe,KAAK,iBAAiB,IAAI1D,IAAmB,EAChF,GAAImE,IAAiB,KAAON,EAAU,CACpC,MAAMW,EAAgBd,EAAe,KAAK,iBAAiB,IAAI1D,MAAqBmE,KAAgB,EAGhGK,EAAc,SAChBD,EAAgBC,EAChBH,EAAWC,GAAMV,EAAS,oBAAoBC,EAAS,EAAMS,EAAG,KAAK,EAExE,CACD,MAAMG,EAASF,EAAc,OAC7B,IAAIG,EAAQD,EAAS,EACrB,KAAOC,GAAS,GAAG,CACjB,MAAM9B,EAAe2B,EAAc,KAAKG,CAAK,EAC7C,GAAIL,EAASzB,CAAY,EAAI,EAC3B,OAAOA,EAAa,YAEtB8B,GACD,CACD,OAAID,EAAS,EACJF,EAAc,KAAK,CAAC,EAEtBZ,EAAiBA,EAAe,YAAc,IACvD,CC5FA,IAAIgB,EAAY,EAEhB,MAAMC,EAA6B,CAACC,EAAGC,IAAMD,EAAIC,EAAI,GAAKD,EAAIC,EAAI,EAAI,EAMtE,SAASC,EAAkBrB,EAAiB,OAAO,SAAa,IAAc,OAAY,SAAUsB,EAAU,GAAI,CAChH,KAAM,CACJ,uBAAAC,EACA,eAAAtB,EACA,uBAAAuB,EACA,oBAAAC,EAAsBP,CACvB,EAAGI,EACEpB,EAAW,CACf,eAAgB,CAAE,EAClB,YAAa,CAAE,EACf,uBAAwB,OAAO,OAAOsB,CAAsB,EAC5D,oBAAAC,EACA,GAAI,IAAIR,MACR,eAAeS,EAAU,CAEvB,UAAWC,KAAmBD,EAAU,CACtC,MAAME,EAAoBF,EAASC,CAAe,EAElD,QAAS5E,EAAI,EAAG8E,EAAID,EAAkB,OAAQ7E,EAAI8E,EAAG9E,IAAK,CACxD,KAAM,CAAC+E,EAAS3B,CAAQ,EAAIpB,EAAwB6C,EAAkB7E,CAAC,CAAC,EAClEgF,EAAQhC,EAAuB4B,EAAiB3B,EAAgBC,GAAkB,KAAMC,EAAUC,CAAQ,EAChH,GAAI,CAAAD,EAAS,eAAe4B,CAAO,EAGnC,CAAA5B,EAAS,eAAe4B,CAAO,EAAIH,EAInC,GAAI,CACEJ,EACEA,EAAuBO,CAAO,GAChCC,EAAM,WAAWD,CAAO,EAG1BC,EAAM,WAAWD,CAAO,CAE3B,MAAC,CAMD,EACF,CACF,CACF,CACL,EAIE,OAAO5B,CACT,CCtDA,SAAS8B,EAASpE,EAAkB8D,EAAU,CAC5C,MAAMO,EAAiB,CAAA,EACvB,IAAIC,EAAwB,KACxBC,EAAwB,KAK5B,SAASC,EAAed,EAAS,CAC/B,KAAM,CACJ,IAAApE,EACA,SAAAgD,CACD,EAAGoB,EACEe,EAAQnF,IAAQ,MAEhBoF,EAAaD,EAAQnC,EAAS,GAAKA,EAAS,GAAK,IACvD,OAAImC,EACEH,IAA0B,OAC5BA,EAAwBvE,EAA0BC,EAAkBV,CAAG,GAGrEiF,IAA0B,OAC5BA,EAAwBxE,EAA0BC,EAAkBV,CAAG,GAGvE+E,EAAeK,CAAU,IAAM,SACjCpC,EAAS,eAAewB,CAAQ,EAChCO,EAAeK,CAAU,EAAI,IAEJD,EAAQH,EAAwBC,CAK5D,CACD,OAAOC,CACT,CCnCA,MAAMG,EAA+BC,EAAAA,cAAkCnB,EAAiB,CAAE,EA4B1F,SAASoB,GAAc,CACrB,OAAOC,EAAAA,WAAiBH,CAAe,CACzC,CCrCA,MAAMI,EAAoCH,EAAAA,cAAoB,KAAK,EAiBnE,SAASI,GAAmB,CAC1B,OAAOF,EAAAA,WAAiBC,CAAoB,CAC9C,CCdA,SAASX,EAASpE,EAAkB8D,EAAU,CAC5C,MAAMmB,EAAYC,EAAWlF,EAAkB8D,CAAQ,EACvD,OAAO,UAAsB,CAC3B,MAAMxE,EAAM0F,IACN1C,EAAWuC,IACjB,OAAOI,EAAU,CACf,IAAA3F,EACA,SAAAgD,CACN,CAAK,CACL,CACA"}